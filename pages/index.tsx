import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import PlayerCar from '@/components/PlayerCar'
import * as Three from 'three'
import { useEffect, useRef } from 'react'
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'
import Stats from 'three/examples/jsm/libs/stats.module'

export default function Home() {
  const canvasRef = useRef()
  useEffect(() => {
    const scene = new Three.Scene()
    const camera = new Three.PerspectiveCamera(
      50,
      window.innerWidth / window.innerHeight,
      1,
      1000
    )
    camera.position.z = 96

    //const canvas = document.getElementById('myThreeJsCanvas')
    const canvas = canvasRef.current
    console.log({ canvas })
    const renderer = new Three.WebGLRenderer({ canvas, antialias: true })
    renderer.setSize(window.innerWidth, window.innerHeight)
    document.body.appendChild(renderer.domElement)

    const ambientLight = new Three.AmbientLight(0xffffff, 0.5)
    ambientLight.castShadow = true
    scene.add(ambientLight)

    const spotLight = new Three.SpotLight(0xffffff, 1)
    ambientLight.castShadow = true
    spotLight.position.set(0, 64, 32)
    scene.add(spotLight)

    const boxGeometry = new Three.BoxGeometry(16, 16, 16)
    const boxMaterial = new Three.MeshNormalMaterial()
    const boxMesh = new Three.Mesh(boxGeometry, boxMaterial)
    scene.add(boxMesh)

    //orbit control
    const controls = new OrbitControls(camera, renderer.domElement)

    //add frames per second stat
    const stats = Stats()
    document.body.appendChild(stats.dom)

    const animate = () => {
      boxMesh.rotation.x += 0.01
      boxMesh.rotation.y += 0.01
      stats.update()
      controls.update()
      renderer.render(scene, camera)
      window.requestAnimationFrame(animate)
    }
    animate()
  }, [])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {/* @ts-ignore */}
        <canvas id="myThreeJsCanvas" ref={canvasRef} />
        {/* <PlayerCar /> */}
      </main>
    </>
  )
}
